USE master
GO
IF DB_ID('udemy') IS NOT NULL
	DROP DATABASE udemy
GO
CREATE DATABASE udemy
GO
USE udemy
GO

CREATE TABLE ACC_ROLE (
    ID INT PRIMARY KEY IDENTITY(0, 1),
    ROLENAME NVARCHAR(16) NOT NULL
);

CREATE TABLE ACCOUNT (
    ID CHAR(8) PRIMARY KEY,
    FULL_NAME NVARCHAR(32) NOT NULL,
    MAIL CHAR(256) NOT NULL,
    ROLE_ID INT NOT NULL

    CONSTRAINT FK_USER_ROLE
    FOREIGN KEY (ROLE_ID)
    REFERENCES ACC_ROLE(ID)
);

-- Kiem tra role_name = 'prof'
-- My created course truy cap vao author id
CREATE TABLE COURSE (
    ID INT PRIMARY KEY IDENTITY(0, 1),
    COURSE_NAME NVARCHAR(256) NOT NULL,
    DISCRIPTION NVARCHAR(1024) NOT NULL,
    -- CONTENT NOT NULL,
    -- PINTURE NOT NULL,
);

-- Kiem tra role_name = 'student'
CREATE TABLE MY_COURSES (
    COURSE_ID INT,
    ACCOUNT_ID CHAR(8)

    CONSTRAINT PK_MYCOURSES
    PRIMARY KEY (COURSE_ID, ACCOUNT_ID)
    
    CONSTRAINT FK_COURSEID_COURSE_MC
    FOREIGN KEY (COURSE_ID)
    REFERENCES COURSE(ID),

    CONSTRAINT FK_ACCOUNTID_ACCOUNT_MC
    FOREIGN KEY (ACCOUNT_ID)
    REFERENCES ACCOUNT(ID)
);

CREATE TABLE AUTHOR (
    COURSE_ID INT,
    AUTHOR_ID CHAR(8)

    CONSTRAINT PK_AUTHOR
    PRIMARY KEY (COURSE_ID, AUTHOR_ID)
    
    CONSTRAINT FK_COURSEID_COURSE_AU
    FOREIGN KEY (COURSE_ID)
    REFERENCES COURSE(ID),

    CONSTRAINT FK_AUTHORID_ACCOUNT_AU
    FOREIGN KEY (AUTHOR_ID)
    REFERENCES ACCOUNT(ID)
);

CREATE TABLE COMMENT (
    COURSE_ID INT,
    ACCOUNT_ID CHAR(8),
    COMMENT NVARCHAR(256) NOT NULL,
    RATING INT NOT NULL

    CONSTRAINT PK_COMMENT
    PRIMARY KEY (COURSE_ID, ACCOUNT_ID)
    
    CONSTRAINT FK_COURSEID_COURSE_CM
    FOREIGN KEY (COURSE_ID)
    REFERENCES COURSE(ID),

    CONSTRAINT FK_ACCOUNTID_ACCOUNT_CM
    FOREIGN KEY (ACCOUNT_ID)
    REFERENCES ACCOUNT(ID)
);

CREATE TABLE BOOK (
    ID INT PRIMARY KEY IDENTITY(0, 1),
    BOOK_NAME NVARCHAR(256) NOT NULL,
    DISCRIPTION NVARCHAR(1024) NOT NULL,
    PRICE INT NOT NULL,
    LINK VARCHAR(256) NOT NULL,
    AUTHOR NVARCHAR(256)
    -- PINTURE NOT NULL,
);

CREATE TABLE BOOKSHELF (
    BOOK_ID INT,
    ACCOUNT_ID CHAR(8)

    CONSTRAINT PK_BOOKSHELF
    PRIMARY KEY (BOOK_ID, ACCOUNT_ID)

    CONSTRAINT FK_BOOKID_BOOK_BS
    FOREIGN KEY (BOOK_ID)
    REFERENCES BOOK(ID),

    CONSTRAINT FK_ACCOUNTID_ACCOUNT_BS
    FOREIGN KEY (ACCOUNT_ID)
    REFERENCES ACCOUNT(ID)
);

CREATE TABLE CART (
    BOOK_ID INT,
    ACCOUNT_ID CHAR(8),
    QUANTITY INT NOT NULL

    CONSTRAINT PK_CART
    PRIMARY KEY (BOOK_ID, ACCOUNT_ID)
    
    CONSTRAINT FK_BOOKID_BOOK_CA
    FOREIGN KEY (BOOK_ID)
    REFERENCES BOOK(ID),

    CONSTRAINT FK_ACCOUNTID_ACCOUNT_CA
    FOREIGN KEY (ACCOUNT_ID)
    REFERENCES ACCOUNT(ID)
);

USE master
GO